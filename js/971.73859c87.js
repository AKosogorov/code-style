"use strict";(self["webpackChunkcode_style"]=self["webpackChunkcode_style"]||[]).push([[971],{3971:function(s,n,l){l.r(n),l.d(n,{default:function(){return K}});var e=l(3396),a=l(4870),i=l(1119),t=l(7139);const c=(0,e._)("div",null,null,-1),r=(0,e._)("div",null,null,-1),u=(0,e._)("div",null,null,-1),o=(0,e._)("div",null,null,-1),d=[c,r,u,o];var p={__name:"LoaderEllipsis",setup(s){const n=(0,a.iH)(null),l=(0,e.Fl)((()=>({width:n.value?.offsetHeight+"px"})));return(s,i)=>((0,e.wg)(),(0,e.iD)("div",{class:"lds-ellipsis",ref_key:"loader",ref:n,style:(0,t.j5)((0,a.SU)(l))},d,4))}};const b=p;var g=b;const _=["type","disabled"];var m={__name:"ButtonSubmit",props:{text:{type:String,required:!0},typeBtn:{type:String,required:!1,default:"submit"},isLoading:{type:Boolean,required:!1,default:!1},isDisabled:{type:Boolean,required:!1,default:!1}},setup(s){return(n,l)=>((0,e.wg)(),(0,e.iD)("button",{class:"button reset",type:s.typeBtn,disabled:s.isLoading||s.isDisabled},[s.isLoading?((0,e.wg)(),(0,e.j4)((0,a.SU)(g),{key:0})):(0,e.kq)("",!0),(0,e._)("span",{class:(0,t.C_)(s.isLoading&&"transparent")},(0,t.zw)(s.text),3)],8,_))}};const v=m;var f=v;function w(){const s=(0,a.iH)(!1);function n(){s.value=!0}function l(){s.value=!1}return{isLoading:s,startLoading:n,finishLoading:l}}var U=l(65);function h(){return new Promise(((s,n)=>{setTimeout((()=>{Math.random()>.5&&s(),n(new Error("Не удалось получить ответ от сервера"))}),2e3)}))}function k(){const s=(0,U.oR)();async function n(){try{await h(),await s.dispatch("alert/setAlertSuccess","Ваши конфиденциальные данные успешно отправлены")}catch(n){await s.dispatch("alert/setAlertError",n.message)}}return{sendMockRequest:n}}const S={class:"container column gap-60"},y=(0,e._)("div",{class:"column gap-30"},[(0,e._)("h1",null,"JavaScript"),(0,e._)("p",{class:"fsz20"}," На этой странице собраны рекомендации по JS. ")],-1),j={class:"column gap-30"},L=(0,e._)("h2",null,"Наименование переменных",-1),W=(0,e._)("p",null,' Одна из самых трудных задач в жизни разработчика, это придумывание названий для переменных. Очень важно подбирать хорошие названия. Это позволяет быстрее понимать, что делает код. Название должно быть кратким, но в тоже время понятным и не превращаться в "ниндзя код". ',-1),E=(0,e.uE)('<div class="column gap-30"><h2>let, var, const</h2><p> Для объявления переменных <b class="red">не рекомендуется</b> использовать <b class="red">var</b>. Если переменная не изменяется, то ее следует объявлять через <b class="green">const</b>, в ином случае используется <b class="green">let</b>. </p><p> Если переменная является массивом или объектом и планируется изменять их содержимое, но не тип переменной или установку ссылки на другой объект, то такие переменные должны быть объявлены через <b class="green">const</b>. </p></div><div class="column gap-30"><h2>Наименование функций</h2><p> В названии функции должен быть глагол, который обозначает действие этой функции. Желательно чтобы он был на первом месте. Хорошо если название функции не совпадает с названиями стандартных методов объектов JS. Это позволяет быстро находить, где используется функция, при поиске по проекту. </p><p> Например, если Вы создадите function <b class="red">find</b>, то при поиске по проекту Вам наверняка будут попадаться участки кода, где используется Array.prototype.<b class="red">find</b>(). Если вместо этого создать function <b class="green">findById</b>, это добавит уникальности и можно будет быстрее осуществить поиск. </p></div>',2),Z={class:"column gap-30"},q=(0,e._)("h2",null,"Function Declaration or Arrow",-1),A=(0,e._)("p",null,' Рекомендуется использовать Function Declaration, т.к. они более заметны в коде. Также их можно вызывать в коде выше объявления. Это позволяет писать код "снизу-вверх". При дальнейшем прочтении кода сверху-вниз, если правильно подобраны названия функций, становится ясно что они выполняют, и не требуется "лезть под капот" (вниз кода) и смотреть, что происходит внутри функций. ',-1),D={class:"column gap-30"},x=(0,e._)("h2",null,"Arrow Function",-1),B=(0,e._)("p",null," Arrow Function aka Стрелочные функции хорошо использовать для: ",-1),C=(0,e._)("ul",{class:"list"},[(0,e._)("li",null,"однострочных вычислений;"),(0,e._)("li",null,"использовании в качестве коллбэков;"),(0,e._)("li",null,"если необходимо сразу вернуть объект из функции.")],-1),F={class:"column gap-30"},R=(0,e._)("h2",null,"Switch",-1),J=(0,e._)("p",null,[(0,e.Uk)(" Если в условии встретилось много "),(0,e._)("b",null,"if esle"),(0,e.Uk)(", возможно стоит воспользоваться конструкцией switch. Важно помнить про особенности конструкции и при необходимости использовать break. ")],-1),H={class:"column gap-30"},M=(0,e._)("h2",null,"Loop",-1),T=(0,e._)("p",null,[(0,e.Uk)(" Циклы. Если не требуется проходить по всем элементам массива, предпочтительнее использовать цикл "),(0,e._)("b",{class:"green"},"for"),(0,e.Uk)(" вместо "),(0,e._)("b",{class:"red"},"forEach"),(0,e.Uk)(". Так как он позволяет прерывать цикл в любой момент ("),(0,e._)("b",{class:"green"},"break"),(0,e.Uk)("), либо перейти на следующую итерацию ("),(0,e._)("b",{class:"green"},"continue"),(0,e.Uk)("). Таким образом можно ускорить выполнение кода, особенно если идет итерация по большому количеству элементов, со сложными вычислениями. ")],-1),z=(0,e._)("div",{class:"column gap-30"},[(0,e._)("h2",null,"?."),(0,e._)("p",null,[(0,e.Uk)(" Иногда бывает, что во время выполнения кода, по магическим причинам, в переменной не обнаруживается необходимое свойство или значение. Эти моменты нужно предвидеть и учитывать при написании кода. Например можно использовать "),(0,e._)("b",{class:"green"},"?.")])],-1),G={class:"column gap-30"},O=(0,e._)("h2",null,"Async",-1),Q=(0,e._)("p",null,[(0,e.Uk)(" Во время запросов на сервер обязательно обрабатывайте возможные ошибки. Для этого рекомендуется использовать блок "),(0,e._)("b",{class:"green"},"try catch"),(0,e.Uk)(". Обязательно используйте "),(0,e._)("b",{class:"green"},"лоадер/спинер"),(0,e.Uk)(", для показа пользователю, что сейчас выполняется ожидание ответа с удаленного источника. ")],-1),I={class:"flex gap-20"};var P={__name:"JSView",setup(s){const{isLoading:n,startLoading:l,finishLoading:t}=w(),{sendMockRequest:c}=k();async function r(){try{l(),await c()}finally{t()}}return(s,l)=>((0,e.wg)(),(0,e.iD)("section",null,[(0,e._)("div",S,[y,(0,e._)("div",j,[L,W,(0,e.Wm)((0,a.SU)(i.Z),{"img-src":"js/js-1.webp","is-bad":""}),(0,e.Wm)((0,a.SU)(i.Z),{"img-src":"js/js-2.webp"})]),E,(0,e._)("div",Z,[q,A,(0,e.Wm)((0,a.SU)(i.Z),{"img-src":"js/js-6.webp","is-bad":""}),(0,e.Wm)((0,a.SU)(i.Z),{"img-src":"js/js-5.webp"})]),(0,e._)("div",D,[x,B,C,(0,e.Wm)((0,a.SU)(i.Z),{"img-src":"js/js-4.webp","is-bad":""}),(0,e.Wm)((0,a.SU)(i.Z),{"img-src":"js/js-3.webp"})]),(0,e._)("div",F,[R,J,(0,e.Wm)((0,a.SU)(i.Z),{"img-src":"js/js-7.webp","is-bad":""}),(0,e.Wm)((0,a.SU)(i.Z),{"img-src":"js/js-8.webp"})]),(0,e._)("div",H,[M,T,(0,e.Wm)((0,a.SU)(i.Z),{label:"catbear","img-src":"cat-2.webp","is-gray":""})]),z,(0,e._)("div",G,[O,Q,(0,e._)("div",I,[(0,e.Wm)((0,a.SU)(f),{text:"GO REQUEST",class:"button--green","is-loading":(0,a.SU)(n),onClick:r},null,8,["is-loading"]),(0,e.Wm)((0,a.SU)(f),{text:"GO REQUEST",class:"button--red",onClick:(0,a.SU)(c)},null,8,["onClick"])])])])]))}};const V=P;var K=V}}]);
//# sourceMappingURL=971.73859c87.js.map